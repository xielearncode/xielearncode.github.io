<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>快速搭建个人博客教程</title>
    <link href="/2022/02/16/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/02/16/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这是蓝鸟x发布的第一篇文章</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>直接在<code>github page</code>平台上托管我们的博客。这样就可以安心的来写作，又不需要定期维护，而且<code>hexo</code>作为一个快速简洁的博客框架，用它来搭建博客真的非常容易。</p><h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a><code>Hexo</code>简介</h2><p><code>Hexo</code>(中文官方网站)是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. <code>Hexo</code>支持<code>Github</code> <code>Flavored</code> <code>Markdown</code>的所有功能, 甚至可以整合<code>Octopress</code>的大多数插件. 并自己也拥有强大的插件系统.</p><h2 id="Hexo-搭建教程"><a href="#Hexo-搭建教程" class="headerlink" title="Hexo 搭建教程"></a><code>Hexo</code> 搭建教程</h2><h6 id="本次教程有-8-个部分，详细介绍了如何搭建个人博客"><a href="#本次教程有-8-个部分，详细介绍了如何搭建个人博客" class="headerlink" title="本次教程有 8 个部分，详细介绍了如何搭建个人博客"></a>本次教程有 8 个部分，详细介绍了如何搭建个人博客</h6><ul><li>安装 <code>Git</code></li><li>安装 <code>Node.js</code></li><li>安装 <code>Hexo</code></li><li><code>Github</code> 创建个人仓库</li><li>更改主题</li><li>发布文章<h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 <code>Git</code></h3><blockquote><p>本教程使用的系统是<code>Windows10 Pro</code></p></blockquote></li></ul><p> 到 <a href="https://git-scm.com/download/win">Git</a> 官网下载并安装即可，下载后有一个Git Bash的命令行工具，以后就用这个命令行工具来使用git</p><h3 id="安装-NodeJs"><a href="#安装-NodeJs" class="headerlink" title="安装 NodeJs"></a>安装 <code>NodeJs</code></h3><p> <code>Hexo</code> 是基于 <code>NodeJs</code> 编写的， 因此要安装 <code>nodejs</code> 和里面的工具<code>npm</code>。<br> Windows：<a href="https://nodejs.org/en/download/">下载链接 https://nodejs.org/en/download</a>，选择LTS版本</p><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 <code>Hexo</code></h3><p>安装好 Git 后，选择好需要安装<code>hexo</code>的地方，这就是你博客的本地服务器（可以新建一个以英文命名的文件夹, 本文建立的文件夹名为 <code>Blog</code>，代指下文出现的<code>Blog</code>），进入这个文件夹后点击空白处，并右键选择 <code>Git Bash here </code> 可以打开 Git 的命令行窗口，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>回车后键入 <code>hexo -v</code> 查看<code>hexo</code>版本</p><h6 id="到这里环境准备完成，开始使用-hexo-搭建个人博客"><a href="#到这里环境准备完成，开始使用-hexo-搭建个人博客" class="headerlink" title="到这里环境准备完成，开始使用 hexo 搭建个人博客"></a>到这里环境准备完成，开始使用 <code>hexo </code>搭建个人博客</h6><h3 id="初始化-Hexo"><a href="#初始化-Hexo" class="headerlink" title="初始化 Hexo"></a>初始化 <code>Hexo</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init 文件夹名<br>$ <span class="hljs-built_in">cd</span> 文件夹名<br>$ npm install<br></code></pre></td></tr></table></figure><p>这一步之后会在 <code>Blog</code> 文件夹生成许多的文件以及文件夹，以下是相关的英译汉：</p><blockquote><p>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br>_config.yml: 博客的配置文件</p></blockquote><p>接着输入以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br>$ hexo g<br>$ hexo s<br></code></pre></td></tr></table></figure><p>这里的<code> hexo s</code> 表示打开服务器，如果要关闭服务器，按下<code>ctrl+c</code>即可，打开服务器后可看见如下结果<br><img src="https://img-blog.csdnimg.cn/0afdf4a39f1f436e9149070ae119473c.png" alt="在这里插入图片描述"><br>此时可在浏览器进入 <a href="http://localhost:4000/">http://localhost:4000</a> ，便可看到个人博客的主页。如下图所示：<br><img src="https://img-blog.csdnimg.cn/6f15f2b61af248649695629013d5ca3f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAd2VpeGluXzQ2NjE5OTEy,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h3 id="创建-GitHub-仓库"><a href="#创建-GitHub-仓库" class="headerlink" title="创建 GitHub 仓库"></a>创建 <code>GitHub </code>仓库</h3><ol><li><p>首先，需要一个<code>GitHub</code>账户，可通过QQ邮箱注册，这里便不一一赘述了</p></li><li><p>登录<code>GitHub</code>账户后，在个人主页新建仓库，点击<code>New  repository</code><br><img src="https://img-blog.csdnimg.cn/61089a5787e54a47b3fe5eb425495924.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAd2VpeGluXzQ2NjE5OTEy,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>创建一个和你用户名相同的仓库，后面加<code>.github.io</code>，只有这样，将来要部署到<code>GitHub page</code>的时候，才会被识别，也就是<code>xxxx.github.io</code>，其中<code>xxx</code>就是你注册<code>GitHub</code>的用户名。</p><h3 id="生成-SSH-添加到-github-仓库"><a href="#生成-SSH-添加到-github-仓库" class="headerlink" title="生成 SSH 添加到 github 仓库"></a>生成 SSH 添加到 <code>github </code>仓库</h3><p>由于后续都是通过 SSH 进行仓库代码的快速部署，所以这一步很有必要，如果之前有在你的电脑本地进行过你的 github 仓库的 SSH 绑定，那此步可跳过<br>在 Bash 命令行键入以下内容</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;yourname&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;youremail&quot;</span><br></code></pre></td></tr></table></figure><p>yourname就是你的 GitHub 用户名，youremail 就是你注册 GitHub 使用的邮箱。<br>然后键入以下内容，经过多次回车即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">ssh-keygen -t rsa -C <span class="hljs-string">&quot;youremail&quot;</span><br></code></pre></td></tr></table></figure><p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。ssh，简单来讲，就是一个秘钥，其中，id_rsa 是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub 是公共秘钥，可以随便给别人看。把这个公钥放在 GitHub 上，这样当你链接 GitHub 自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过 git 上传你的文件到 GitHub 上。而后在 github 的 setting 中，找到 SSH keys 的设置选项，点击 New SSH key 把你的 id_rsa.pub 里面的信息复制进去。之后，在 gitbash 中输入以下指令，查看是否 SSH 是否已绑定成功。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>成功的界面如下<br><img src="https://img-blog.csdnimg.cn/d63484b3eb6541a385c73fd17585eca2.png" alt="在这里插入图片描述"></p><h3 id="将本地-Hexo-部署到-Github"><a href="#将本地-Hexo-部署到-Github" class="headerlink" title="将本地 Hexo 部署到 Github"></a>将本地 Hexo 部署到 Github</h3><p>这一步，我们就可以将 hexo 和 github 关联起来，也就是将 hexo 生成的文章部署到 github 上，打开站点配置文件 <code>_config.yml</code>，翻到最后，进行如下修改即可，xxxx 改为你的 github 账户用户名</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp">deploy:<br>  type: git<br>  repo: git@github.com:xxxx/xxxx.github.io.git<br>  branch: main<br></code></pre></td></tr></table></figure><p>修改完配置文件<code>_config.yml</code>并保存后，回到 gitbash命令行这个时候需要先安装<code>deploy-git</code> ，也就是部署的命令,这样你才能用命令部署到 GitHub</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp">hexo clean<br>hexo generate<br>hexo deploy<br></code></pre></td></tr></table></figure><blockquote><p><code>hexo clean</code> 清除了你之前生成的东西。<br><code>hexo generate </code>生成静态文章，可以用 <code>hexo g </code>缩写<br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p></blockquote><p>部署的时候可能有弹出窗口需要你登录Github，登录即可，设置了 ssh 一般不需要</p><p>得到下图说明你已经部署成功，<br><img src="https://img-blog.csdnimg.cn/692ca13d165d429da904dbe7984a87b6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAd2VpeGluXzQ2NjE5OTEy,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h3 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h3><p>这里以 fluid 主题作为示例<br>来到主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid">github</a> 仓库，点击 Download ZIP 下载最新的压缩包<br><img src="https://img-blog.csdnimg.cn/41de292e86b642dfb46f80a64dab1644.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAd2VpeGluXzQ2NjE5OTEy,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>下载完后，将压缩包解压到你博客项目的 themes 文件夹下，并将解压出来文件夹更名为 fluid<br>然后打开根目录的 _config.yml 文件，拉到最下面找到 theme 属性，修改为 fluid<br><img src="https://img-blog.csdnimg.cn/5daa3dc87284453894cea1643c19551e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAd2VpeGluXzQ2NjE5OTEy,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>输入以下三个指令进行重新部署，过一会儿即可看到主题发生改变</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><p>发布新文章</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">hexo <span class="hljs-keyword">new</span> newpapername<br></code></pre></td></tr></table></figure><p>然后在Blog&#x2F;source&#x2F;_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再键入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>每次更新完文章或配置，都建议输入以上三个指令进行重新部署，而不要缺某条指令</p><p>以上就是本篇文章的全部内容。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>个人博客优化</title>
    <link href="/2022/02/16/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BC%98%E5%8C%96/"/>
    <url>/2022/02/16/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="个人博客的优化"><a href="#个人博客的优化" class="headerlink" title="个人博客的优化"></a>个人博客的优化</h1><h2 id="1-自动部署"><a href="#1-自动部署" class="headerlink" title="1. 自动部署"></a>1. 自动部署</h2><p>对于个人博客，如果设置为自动部署，每一次发布文章时还需要手动更新 GitHub 仓库中的内容，如果设置为自动部署，那么以后在本地修改博客内容以后便会自动更新 GitHub 中的内容</p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>首先我们要确保本地 Hexo 是可以正确运行的，比如</p><figure class="highlight crystal"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>hexo clean<br><span class="hljs-variable">$ </span>hexo deploy<br></code></pre></td></tr></table></figure><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><p>如果 Hexo 可以正常地部署到 GitHub，那么实际上你原来的秘钥是可以正常使用的。</p><p>以下为 macOS 下的操作，Linux 下操作方法相同，Windows 10 用户可以在市场中安装 Ubuntu 以后执行：</p><h1 id="2-添加标签页和分类页"><a href="#2-添加标签页和分类页" class="headerlink" title="2. 添加标签页和分类页"></a>2. 添加标签页和分类页</h1><p>现在使用的主题里打开<code>_config.yml</code>文件（这里一定要是themes文件下所含的主题，不要弄错了）。按下<code>Ctrl+F</code>，搜索<code>menu</code>，找到如下内容：</p><p><img src="C:\Users\Administrator.DESKTOP-VVE6ROJ\AppData\Roaming\Typora\typora-user-images\image-20220216180517037.png" alt="image-20220216180517037"></p><p>按照自己的要求对代码进行修改，让菜单按钮显示出来。</p><p>在blog文件夹下打开 git bash 键入如下命令</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>hexo n page tags<br></code></pre></td></tr></table></figure><p>可以发现在 source  文件夹下出现一个 tags 文件夹，</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/02/16/hello-world/"/>
    <url>/2022/02/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
